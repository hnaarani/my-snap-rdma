---
job: snap-rdma

registry_host: harbor.mellanox.com
registry_path: /swx-storage/snap-rdma
registry_auth: swx-storage

credentials:
  - {credentialsId: '311997c9-cc1c-4d5d-8ba2-6eb43ba0a06d', usernameVariable: 'REPO_USER', passwordVariable: 'REPO_PASS'}
  - {credentialsId: '3a89fb85-f7aa-40f2-bd7a-32be80588d95', usernameVariable: 'REPO_USER', passwordVariable: 'REPO_PASS'}

failFast: false
kubernetes:
  cloud: swx-k8s-spray
  namespace: snap-ci
  runAsUser: "6213"
  runAsGroup: "11429"

volumes:
  - {mountPath: /hpc/local, hostPath: /hpc/local}
  - {mountPath: /auto/sw_tools, hostPath: /auto/sw_tools}
  - {mountPath: /auto/mtrswgwork, hostPath: /auto/mtrswgwork}
  - {mountPath: /auto/sw/work, hostPath: /auto/sw/work}
  - {mountPath: /.autodirect/sw/release/mlnx_ofed, hostPath: /.autodirect/sw/release/mlnx_ofed}
  - {mountPath: /auto/sw/release/sw_acceleration, hostPath: /auto/sw/release/sw_acceleration}
  - {mountPath: /var/home/swx-jenkins/.ssh, hostPath: /labhome/swx-jenkins/.ssh}
  - {mountPath: /root/.docker, hostPath: /auto/mtrswgwork/swx-jenkins/.docker}

env:
  MOFED_VER: 23.07-0.5.0.0
  DOCA_VER: 2.5
  CCACHE_ENABLE: 'true'
  CCACHE_DIR: '/auto/sw/work/swx_devops/ccache/$job'
  CCACHE_TEMPDIR: '/tmp'
  docker_config: "/auto/mtrswgwork/swx-jenkins/.docker"

runs_on_dockers:
  - {file: '.ci/Dockerfile.centos.stream8', name: 'centos_stream8', arch: 'x86_64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.centos.stream8', name: 'centos_stream8', arch: 'aarch64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.ubuntu2004', name: 'ubuntu2004', arch: 'x86_64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.ubuntu2004', name: 'ubuntu2004', arch: 'aarch64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.ubuntu2204', name: 'ubuntu2204', arch: 'x86_64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.ubuntu2204', name: 'ubuntu2204', arch: 'aarch64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.centos7.9.2009', name: 'centos79', arch: 'x86_64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.centos7.9.2009', name: 'centos79', arch: 'aarch64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.debian10', name: 'debian10', arch: 'x86_64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.debian10', name: 'debian10', arch: 'aarch64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.euleros2sp8aarch64', name: 'euleros2sp8ofed56', arch: 'aarch64', tag: '5.6-2.0.9.0', build_args: '--build-arg MOFED_VER=5.6-2.0.9.0'}
  #- {file: '.ci/Dockerfile.euleros2sp9x86', name: 'euleros2sp9ofed59', arch: 'x86_64', tag: '5.9-0.1.9.0', build_args: '--build-arg MOFED_VER=5.9-0.1.9.0'}
  - {file: '.ci/Dockerfile.ubuntu2204', name: 'toolbox', category: 'tool', arch: 'x86_64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {file: '.ci/Dockerfile.openeuler.20.03', name: 'openeuler2003', arch: 'aarch64', tag: '$MOFED_VER', build_args: '--build-arg MOFED_VER=$MOFED_VER'}
  - {url: '$registry_host/toolbox/ngci-centos:7.9.2009.2', name: 'blackduck', category: 'tool', arch: 'x86_64'}
  - {file: '.ci/Dockerfile.doca', name: 'doca_toolbox', category: 'tool', arch: 'x86_64', tag: '$DOCA_VER', build_args: '--build-arg DOCA_VER=$DOCA_VER'}

steps:

  - name: Build distro package
    run: |
      git config --global --add safe.directory '*'
      .ci/build.sh

  - name: Upload distro package NEXUS
    credentialsId: '311997c9-cc1c-4d5d-8ba2-6eb43ba0a06d'
    containerSelector:
      - "{name: 'centos_stream8', variant:1}"
      - "{name: 'ubuntu2004', variant:1}"
      - "{name: 'ubuntu2204', variant:1}"
      - "{name: 'centos79', variant:1}"
      - "{name: 'openeuler2003', variant:1}"
    run: |
      .ci/upload.sh nexus

  - name: Upload distro package URM
    credentialsId: '3a89fb85-f7aa-40f2-bd7a-32be80588d95'
    containerSelector:
      - "{name: 'centos_stream8', variant:1}"
      - "{name: 'ubuntu2004', variant:1}"
      - "{name: 'ubuntu2204', variant:1}"
      - "{name: 'centos79', variant:1}"
      - "{name: 'euleros2sp8ofed56', variant:1}"
      - "{name: 'openeuler2003', variant:1}"
    run: |
      .ci/upload.sh urm

  - name: Code style check
    containerSelector: "{name: 'toolbox'}"
    run: |
      .ci/code_style_check.sh
    archiveArtifacts: 'code_style/*.log'

  - name: Code spell check
    containerSelector: "{name: 'toolbox'}"
    run: |
      .ci/codespell.sh

  - name: Commit message check
    containerSelector: "{name: 'toolbox'}"
    run: |
      if test -n "$ghprbPullId"; then
        .ci/gitlint/run_gitlint.sh
      else
        echo no ghprbPullId found, skipping...
      fi

  - name: Check autotools build
    containerSelector: "{name: 'toolbox'}"
    run: |
      ./autogen.sh
      ./configure
      make -j 4 all
      sudo make install

  - name: Coverity mlnx-libsnap
    containerSelector: "{name: 'toolbox'}"
    run: |
      .ci/coverity.sh --pre_script './autogen.sh; ./configure' \
                      --build_script 'make -j 4' \
                      --ignore_files 'tests' \
                      --check \
                      --verbose
    publishHTML:
      reportDir: 'cov_build/html'
      reportFiles: 'index.html'
      reportName: 'Coverity Report mlnx-libsnap'

  - name: Coverity core
    containerSelector: "{name: 'doca_toolbox'}"
    run: |
      meson subprojects download
      .ci/coverity.sh --pre_script 'meson setup build_coverity' \
                      --build_script 'meson compile --jobs 4 -C build_coverity' \
                      --ignore_files 'subprojects/flexio subprojects/libfiu /tmp' \
                      --defects-expected 2 \
                      --verbose
    publishHTML:
      reportDir: 'cov_build/html'
      reportFiles: 'index.html'
      reportName: 'Coverity Report core'

  - name: Blackduck scan source
    enable: false
    containerSelector: "{name: 'blackduck'}"
    shell: action
    module: ngci
    run: NGCIBlackDuckScan
    args:
      projectName: "mlnx-libsnap"
      projectVersion: "1.6.0"
      projectSrcPath: "src"
      attachArtifact: true
      reportName: "BlackDuck report"
      scanMode: "source"
    env:
      SPRING_APPLICATION_JSON: '{"blackduck.url":"https://blackduck.mellanox.com/","blackduck.api.token":"ODMwOWYwMzEtODA2ZC00MzBjLWI1ZDEtNmFiMjBkYzQzMzkwOjNmNjExN2M1LWE2ZmEtNDZlYS1hZjRiLTZlNDgwNjAwOTVjNw=="}'

pipeline_stop:
  run: |
    if [[ ! -n "$ghprbPullId" && "$pipeline_status" == "SUCCESS" ]]; then
      .ci/git_tag.sh
    fi
